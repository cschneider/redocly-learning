openapi: 3.0.3
info:
  title: AEM Content Fragment APIs
  description: |
    These control-plane APIs are used to fully manage the Content Fragments and
    their associated Models.
  version: 0.0.1
tags:
  - name: Fragments
    description: Content Fragments Operations
  - name: Models
    description: Content Fragment Models Operations
security:
  - Basic: []
  - Bearer: []
  - ApiKey: []
  - Organization: []
servers:
  - url: https://api-dev.adobeaemcloud.com/adobe/sites

paths:
  /cf/models:
    parameters:
      - $ref: '#/components/parameters/X-Adobe-Accept-Unsupported-API'
      - $ref: '#/components/parameters/x-adobe-tenant'
      - $ref: '#/components/parameters/X-Adobe-Accept-Experimental'
    get:
      operationId: models/getModels
      tags:
        - Models
      summary: |
        Retrieve all the Content Fragment Models accessible to the current
        user
      description: |
        This API call provides support for retrieving all of the Content Fragment Models
        accessible to the current user. The request can be paginated.
      parameters:
        - in: query
          name: cursor
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: A maximum number of Content Fragment Models to retrieve.
      responses:
        '200':
          description: A list of Content Fragment Models was successfully returned.
          content:
            application/json:
              schema:
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContentFragmentModel'
                  cursor:
                    $ref: '#/components/schemas/Cursor'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      operationId: models/createModel
      tags:
        - Models
      summary: Create a new Content Fragment Model
      description: This call allows defining a new Content Fragment Model.
      requestBody:
        $ref: '#/components/requestBodies/RequestContentFragmentModel'
      responses:
        '201':
          description: The Content Fragment Model was successfully created.
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The URI at which the created model can be accessed.
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /cf/models/{id}:
    parameters:
      - $ref: '#/components/parameters/X-Adobe-Accept-Unsupported-API'
      - in: path
        name: id
        required: true
        description: The ID of the Content Fragment Model to retrieve.
        schema:
          $ref: '#/components/schemas/Base64URLId'
    head:
      operationId: models/getModelHeaders
      tags:
        - Models
      summary: Retrieve the headers for a Content Fragment Model
      description: |
        This operation allows retrieving the headers for a Content Fragment Model, when a client needs to execute subsequent operations that
        need to be consistent.
      responses:
        '200':
          description: OK
          headers:
            ETag:
              schema:
                type: string
              description: |
                A strong entity tag that identifies the current state of the accessed Content Fragment Model.
              required: true
            Last-Modified:
              schema:
                type: string
              description: |
                The date and time when the origin server believes the resource was last modified. See [RFC7232](https://httpwg
                .org/specs/rfc7232.html#header.last-modified) for a description of the format.
              required: true
        '304':
          description: Not Modified
          headers:
            ETag:
              schema:
                type: string
              description: |
                A strong entity tag that identifies the current state of the accessed Content Fragment Model.
            Last-Modified:
              schema:
                type: string
              description: |
                The date and time when the origin server believes the resource was last modified. See [RFC7232](https://httpwg
                .org/specs/rfc7232.html#header.last-modified) for a description of the format.
        '400':
          description: Bad Request
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    get:
      operationId: models/getModel
      tags:
        - Models
      summary: Retrieve a Content Fragment Model
      description: |
        This operation allows retrieving a Content Fragment Model by its ID.
      responses:
        '200':
          description: OK
          headers:
            ETag:
              schema:
                type: string
              description: |
                A strong entity tag that identifies the current state of the accessed Content Fragment Model.
              required: true
            Last-Modified:
              schema:
                type: string
              description: |
                The date and time when the origin server believes the resource was last modified. See [RFC7232](https://httpwg
                .org/specs/rfc7232.html#header.last-modified) for a description of the format.
              required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentFragmentModel'
        '304':
          $ref: '#/components/responses/NotModified'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      operationId: models/updateModel
      summary: Updates a Content Fragment Model
      description: Updates the model identified by the passed `id`.
      tags:
        - Models
      parameters:
        - in: header
          name: If-Match
          schema:
            type: string
            description: The value of an `ETag` received for a previous `HEAD` or `GET` request to this model.
          required: true
      requestBody:
        required: true
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchBody'
      responses:
        '204':
          description: |
            The update operation completed successfully. The response body doesn't provide any content. If the response's `ETag` is the 
            same as before, then this signals that the patch has not changed the resource.
          headers:
            Content-Location:
              description: |
                Indicates that this content is a representation reporting on the requested action's status and that the same 
                report is available (for future access with GET) at the given URI
              schema:
                type: string
                pattern: ^/adobe/cf/models/[A-Za-z0-9_\-]+$
            ETag:
              schema:
                type: string
              description: The updated `ETag` value after this update.
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: models/deleteModel
      summary: Deletes a Content Fragment Model
      description: Deletes the model identified by the passed `id`.
      tags:
        - Models
      parameters:
        - in: header
          name: If-Match
          schema:
            type: string
            description: The value of an `ETag` received for a previous `HEAD` or `GET` request to this model.
          required: true
      responses:
        '204':
          description: The delete operation completed successfully. The response body doesn't provide any content.
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /cf/datatypes:
    parameters:
      - $ref: '#/components/parameters/X-Adobe-Accept-Unsupported-API'
    get:
      operationId: models/listDataTypes
      tags:
        - Models
      summary: Retrieves the available data types
      description: |
        The Data Types define what kind of fields a Content Fragment Model can have.
      parameters:
        - in: query
          name: cursor
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: A maximum number of Data Types to retrieve.
      responses:
        '200':
          description: A list of Content Fragments Data Types was successfully returned.
          headers:
            ETag:
              schema:
                type: string
              description: |
                A strong entity tag that identifies the current available set
                of Content Fragments Data Types, irrespective of the paginated response.
          content:
            application/json:
              schema:
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataType'
                  cursor:
                    $ref: '#/components/schemas/Cursor'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    Basic:
      type: http
      scheme: basic
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
    Organization:
      type: apiKey
      in: header
      name: X-Gw-Ims-Org-Id
  schemas:
    Base64URLId:
      description: Defines a `base64url` with no padding encoded ID.
      type: string
      pattern: ^[A-Za-z0-9_\-]+$
    ContentFragmentModel:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Base64URLId'
        path:
          type: string
          description: The path where this model is currently stored.
        name:
          type: string
          description: A human-readable name for this model.
        description:
          type: string
          description: A human-readable description for this model.
        lastModified:
          type: number
          description: |
            A Unix time value that indicates when this model was last modified.
        lastModifiedBy:
          type: string
          description: The user ID that last modified this model.
        locked:
          type: boolean
          description: |
            If a model is locked, then no edits can be performed on this model,
            except for unlocking it.
        status:
          type: string
          description: |
            The status of this model. A model is in `draft` as soon as it's
            created, unless the user specifically marks the model as `enabled`.
            A model is in `disabled` state only when a user explicitly disables
            the model.
          enum:
            - enabled
            - disabled
            - draft
        fields:
          type: array
          items:
            $ref: '#/components/schemas/ContentFragmentModelField'
      required:
        - id
        - path
        - name
        - lastModified
        - lastModifiedBy
        - locked
        - status
        - fields
    ContentFragmentModelField:
      description: Defines a Content Fragment Model field.
      type: object
      properties:
        name:
          type: string
          description: The name of this field.
        label:
          type: string
          description: |
            A label to be used when rendering this field in an editable form.
        description:
          type: string
          description: |
            A human-readable description for this field.
        required:
          type: boolean
          description: Defines whether this field is required or optional.
        multiple:
          type: boolean
          description: Defines if this field should store multiple values.
        type:
          type: object
          properties:
            id:
              type: string
              description: The id of the `DataType` that backs this field.
            metadata:
              type: object
              description: The `DataType` metadata that applies to this field.
    Cursor:
      description: |
        A cursor is an opaque string that can be used in API calls which support
        paginating the response. A non-existent cursor signifies that the returned list does not have more elements.
      type: string
      minLength: 1
      nullable: false
    DataType:
      description: |
        A Data Type defines the type of field belonging to a Content Fragment
        Model / Content Fragment.
      type: object
      properties:
        id:
          type: string
          description: A unique value that determines this type.
        description:
          type: string
          description: A human-readable description of the type.
        metadata:
          type: array
          description: An array of properties specific to each data type.
          items:
            properties:
              key:
                type: string
                description: The metadata key.
              description:
                type: string
                description: A human-readable string describing the purpose of this metadata entry.
    ErrorResponse:
      description: An RFC7807 JSON Problem Details Object
      type: object
      properties:
        type:
          type: string
          description: A URI reference [RFC3986] that identifies the problem type.
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          type: number
          description: The HTTP status code.
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: |
            A URI reference that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
      required:
        - type
        - status
        - title
        - detail
    PatchBody:
      type: array
      items:
        oneOf:
          - type: object
            additionalProperties: false
            properties:
              path:
                type: string
              op:
                enum:
                  - add
                  - replace
                  - test
              value:
                description: The value to be used within the operations.
            required:
              - path
              - op
              - value
          - type: object
            additionalProperties: false
            properties:
              path:
                type: string
              op:
                enum:
                  - remove
            required:
              - path
              - op
          - type: object
            additionalProperties: false
            properties:
              from:
                type: string
              path:
                type: string
              op:
                enum:
                  - move
                  - copy
            required:
              - from
              - op
              - path
  requestBodies:
    RequestContentFragmentModel:
      description: The request payload for creating a new Content Fragment Model.
      content:
        application/json:
          schema:
            properties:
              configurationFolder:
                type: string
                description: The configuration folder where the model should be created.
              name:
                type: string
                description: A human-readable name for this model.
              description:
                type: string
                description: A human-readable description for this model.
              locked:
                type: boolean
                description: |
                  If a model is locked, then no edits can be performed on this model,
                  except for unlocking it.
              status:
                type: string
                description: |
                  The status of this model. A model is in `draft` as soon as it's
                  created, unless the user specifically marks the model as `enabled`.
                  A model is in `disabled` state only when a user explicitly disables
                  the model.
                enum:
                  - enabled
                  - disabled
                  - draft
              fields:
                type: array
                items:
                  $ref: '#/components/schemas/ContentFragmentModelField'
            required:
              - name
              - fields

  responses:
    NotModified:
      description: Not Modified
      headers:
        ETag:
          schema:
            type: string
          description: A strong entity tag.
        Last-Modified:
          schema:
            type: string
          description: |
            The date and time when the origin server believes the resource was last modified. See [RFC7232](https://httpwg
            .org/specs/rfc7232.html#header.last-modified) for a description of the format.
    BadRequest:
      description: Bad Request. The Problem Details object will provide more information about the exact cause.
      content:
        application/problem+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              status:
                type: number
                default: 400
              title:
                type: string
                default: Bad Request
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              status:
                type: number
                default: 401
              title:
                type: string
                default: Unauthorized
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              status:
                type: number
                default: 403
              title:
                type: string
                default: Forbidden
    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              status:
                type: number
                default: 404
              title:
                type: string
                default: Not Found
    Conflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              status:
                type: number
                default: 409
              title:
                type: string
                default: Conflict
    PreconditionFailed:
      description: Precondition Failed
      content:
        application/problem+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              title:
                type: string
                default: Precondition Failed
              status:
                type: number
                default: 412
    UnsupportedMediaType:
      description: |
        Unsupported Media Type. When provided as a response to a `PATCH` request,
        the response will provide an `Accept-Patch` response header to notify
        the client what patch document media types are supported.
      content:
        application/problem+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              title:
                type: string
                example: Unsupported Media Type
              status:
                type: number
                default: 415
    UnprocessableEntity:
      description: |
        Unprocessable Entity. The server understands the patch document and the
        syntax of the patch document appears to be valid, but the server is
        incapable of processing the request.This might include attempts to
        modify a resource in a way that would cause the resource to become invalid.
      content:
        application/problem+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              status:
                type: number
                default: 422
              title:
                type: string
                default: Unprocessable Entity
    InternalServerError:
      description: |
        The server encountered an unexpected error. Retrying the request after a certain time could help.
      content:
        application/problem+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              status:
                type: number
                default: 500
              title:
                type: string
                default: Internal Server Error
  parameters:
    X-Adobe-Accept-Unsupported-API:
      name: X-Adobe-Accept-Unsupported-API
      in: header
      required: true
      schema:
        enum:
          - 1
    X-Adobe-Accept-Experimental:
      name: X-Adobe-Accept-Experimental
      in: header
      required: true
      schema:
        enum:
          - 1
    x-adobe-tenant:
      name: x-adobe-tenant
      in: header
      required: true
      schema: 
        default: 
